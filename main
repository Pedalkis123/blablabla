local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")


local LocalPlayer = Players.LocalPlayer
local isFarming = false
local farmConnection = nil
local currentlyTeleporting = false
local farmDelay = 1.0  
local teleportSpeed = 0.5  
local lastScan = 0
local scanInterval = 1.0  
local cachedItems = {}
local includeYen = false  
local targetItems = {
    "Arrow", "The Arrow.", "Yen", "Rokakaka", "Diary", "Heaven", "Vampire", "Blood", "Mask", 
    "Black Peral", "Picture", "Pebble", "Bone", "Stone", "Soap", "The Box", "Stone Mask", 
    "Glass Shard", "Octopus", "Requiem", "Corpse", "Nugget"
}

local safeLocation = Vector3.new(3078.41, 1966.12, 414.04)
local cityLocation = Vector3.new(-148.46, 2000.82, 570.42)
local noclipConnection = nil

local function enableNoclip()
    if noclipConnection then return end
    noclipConnection = RunService.Stepped:Connect(function()
        if LocalPlayer.Character then
            for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end)
end

local function disableNoclip()
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
        if LocalPlayer.Character then
            for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end
end


local gui = Instance.new("ScreenGui")
gui.Name = "ItemFarmGUI"
gui.Parent = game:GetService("CoreGui")

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 300, 0, 250)  
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -125)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = gui

local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
title.BorderSizePixel = 0
title.Text = "pedalkis farm"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 18
title.Font = Enum.Font.SourceSansBold
title.Parent = mainFrame

local farmButton = Instance.new("TextButton")
farmButton.Name = "FarmButton"
farmButton.Size = UDim2.new(0.8, 0, 0, 40)
farmButton.Position = UDim2.new(0.1, 0, 0.15, 0)
farmButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
farmButton.BorderSizePixel = 0
farmButton.Text = "Start Farming"
farmButton.TextColor3 = Color3.fromRGB(255, 255, 255)
farmButton.TextSize = 16
farmButton.Font = Enum.Font.SourceSansBold
farmButton.Parent = mainFrame

local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "Status"
statusLabel.Size = UDim2.new(0.8, 0, 0, 30)
statusLabel.Position = UDim2.new(0.1, 0, 0.35, 0)
statusLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
statusLabel.BorderSizePixel = 0
statusLabel.Text = "Status: Idle"
statusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
statusLabel.TextSize = 14
statusLabel.Font = Enum.Font.SourceSans
statusLabel.Parent = mainFrame


local speedSlider = Instance.new("Frame")
speedSlider.Name = "SpeedSlider"
speedSlider.Size = UDim2.new(0.8, 0, 0, 40)
speedSlider.Position = UDim2.new(0.1, 0, 0.5, 0)
speedSlider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
speedSlider.BorderSizePixel = 0
speedSlider.Parent = mainFrame

local speedValue = Instance.new("TextLabel")
speedValue.Name = "Value"
speedValue.Size = UDim2.new(0, 50, 1, 0)
speedValue.Position = UDim2.new(1, -50, 0, 0)
speedValue.BackgroundTransparency = 1
speedValue.Text = "0.5s"
speedValue.TextColor3 = Color3.fromRGB(255, 255, 255)
speedValue.TextSize = 14
speedValue.Font = Enum.Font.SourceSans
speedValue.Parent = speedSlider

local speedTitle = Instance.new("TextLabel")
speedTitle.Name = "Title"
speedTitle.Size = UDim2.new(0.5, 0, 1, 0)
speedTitle.BackgroundTransparency = 1
speedTitle.Text = "Teleport Speed"
speedTitle.TextColor3 = Color3.fromRGB(200, 200, 200)
speedTitle.TextSize = 14
speedTitle.Font = Enum.Font.SourceSans
speedTitle.Parent = speedSlider

local sliderSpeed = Instance.new("TextButton")
sliderSpeed.Name = "Slider"
sliderSpeed.Size = UDim2.new(0.6, 0, 0.5, 0)
sliderSpeed.Position = UDim2.new(0.2, 0, 0.25, 0)
sliderSpeed.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
sliderSpeed.BorderSizePixel = 0
sliderSpeed.Text = ""
sliderSpeed.Parent = speedSlider

local sliderSpeedKnob = Instance.new("Frame")
sliderSpeedKnob.Name = "Knob"
sliderSpeedKnob.Size = UDim2.new(0.05, 0, 1.5, 0)
sliderSpeedKnob.Position = UDim2.new(0.5, -5, -0.25, 0)
sliderSpeedKnob.BackgroundColor3 = Color3.fromRGB(100, 200, 100)
sliderSpeedKnob.BorderSizePixel = 0
sliderSpeedKnob.Parent = sliderSpeed


local delaySlider = Instance.new("Frame")
delaySlider.Name = "DelaySlider"
delaySlider.Size = UDim2.new(0.8, 0, 0, 40)
delaySlider.Position = UDim2.new(0.1, 0, 0.65, 0)
delaySlider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
delaySlider.BorderSizePixel = 0
delaySlider.Parent = mainFrame

local delayValue = Instance.new("TextLabel")
delayValue.Name = "Value"
delayValue.Size = UDim2.new(0, 50, 1, 0)
delayValue.Position = UDim2.new(1, -50, 0, 0)
delayValue.BackgroundTransparency = 1
delayValue.Text = "1.0s"
delayValue.TextColor3 = Color3.fromRGB(255, 255, 255)
delayValue.TextSize = 14
delayValue.Font = Enum.Font.SourceSans
delayValue.Parent = delaySlider

local delayTitle = Instance.new("TextLabel")
delayTitle.Name = "Title"
delayTitle.Size = UDim2.new(0.5, 0, 1, 0)
delayTitle.BackgroundTransparency = 1
delayTitle.Text = "Farm Delay"
delayTitle.TextColor3 = Color3.fromRGB(200, 200, 200)
delayTitle.TextSize = 14
delayTitle.Font = Enum.Font.SourceSans
delayTitle.Parent = delaySlider

local sliderDelay = Instance.new("TextButton")
sliderDelay.Name = "Slider"
sliderDelay.Size = UDim2.new(0.6, 0, 0.5, 0)
sliderDelay.Position = UDim2.new(0.2, 0, 0.25, 0)
sliderDelay.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
sliderDelay.BorderSizePixel = 0
sliderDelay.Text = ""
sliderDelay.Parent = delaySlider

local sliderDelayKnob = Instance.new("Frame")
sliderDelayKnob.Name = "Knob"
sliderDelayKnob.Size = UDim2.new(0.05, 0, 1.5, 0)
sliderDelayKnob.Position = UDim2.new(0.5, -5, -0.25, 0)
sliderDelayKnob.BackgroundColor3 = Color3.fromRGB(100, 200, 100)
sliderDelayKnob.BorderSizePixel = 0
sliderDelayKnob.Parent = sliderDelay


local yenToggleButton = Instance.new("TextButton")
yenToggleButton.Name = "YenToggleButton"
yenToggleButton.Size = UDim2.new(0.8, 0, 0, 30)
yenToggleButton.Position = UDim2.new(0.1, 0, 0.9, 0)
yenToggleButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
yenToggleButton.BorderSizePixel = 0
yenToggleButton.Text = "Include Yen: OFF"
yenToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
yenToggleButton.TextSize = 14
yenToggleButton.Font = Enum.Font.SourceSans
yenToggleButton.Parent = mainFrame


local itemCounter = Instance.new("TextLabel")
itemCounter.Name = "ItemCounter"
itemCounter.Size = UDim2.new(0.8, 0, 0, 20)
itemCounter.Position = UDim2.new(0.1, 0, 0.98, 0)
itemCounter.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
itemCounter.BorderSizePixel = 0
itemCounter.Text = "Items Found: 0"
itemCounter.TextColor3 = Color3.fromRGB(200, 200, 200)
itemCounter.TextSize = 14
itemCounter.Font = Enum.Font.SourceSans
itemCounter.Parent = mainFrame


sliderSpeed.MouseButton1Down:Connect(function()
    local connection
    connection = RunService.RenderStepped:Connect(function()
        local mouse = game:GetService("UserInputService"):GetMouseLocation()
        local sliderPosition = sliderSpeed.AbsolutePosition
        local sliderWidth = sliderSpeed.AbsoluteSize.X
        
        local relativeX = math.clamp((mouse.X - sliderPosition.X) / sliderWidth, 0, 1)
        sliderSpeedKnob.Position = UDim2.new(relativeX, -5, -0.25, 0)
        
        teleportSpeed = 0.1 + (relativeX * 0.9) 
        speedValue.Text = string.format("%.1fs", teleportSpeed)
    end)
    
    local upConnection
    upConnection = game:GetService("UserInputService").InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            connection:Disconnect()
            upConnection:Disconnect()
        end
    end)
end)


sliderDelay.MouseButton1Down:Connect(function()
    local connection
    connection = RunService.RenderStepped:Connect(function()
        local mouse = game:GetService("UserInputService"):GetMouseLocation()
        local sliderPosition = sliderDelay.AbsolutePosition
        local sliderWidth = sliderDelay.AbsoluteSize.X
        
        local relativeX = math.clamp((mouse.X - sliderPosition.X) / sliderWidth, 0, 1)
        sliderDelayKnob.Position = UDim2.new(relativeX, -5, -0.25, 0)
        
        farmDelay = relativeX * 3.0 
        delayValue.Text = string.format("%.1fs", farmDelay)
    end)
    
    local upConnection
    upConnection = game:GetService("UserInputService").InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            connection:Disconnect()
            upConnection:Disconnect()
        end
    end)
end)


yenToggleButton.MouseButton1Click:Connect(function()
    includeYen = not includeYen
    yenToggleButton.Text = "Include Yen: " .. (includeYen and "ON" or "OFF")
    yenToggleButton.BackgroundColor3 = includeYen and Color3.fromRGB(50, 150, 50) or Color3.fromRGB(80, 80, 80)
    
    
    cachedItems = {}
    
    
    local items = findValuableItems()
    itemCounter.Text = "Items Found: " .. #items
end)


function teleportTo(destination, duration)
    if currentlyTeleporting then return false end
    currentlyTeleporting = true
    
    local wasNoclipEnabled = noclipConnection ~= nil
    enableNoclip()
    
    if typeof(destination) == "Instance" then
        destination = destination.CFrame.Position
    elseif typeof(destination) == "CFrame" then
        destination = destination.Position
    elseif typeof(destination) ~= "Vector3" then
        currentlyTeleporting = false
        if not wasNoclipEnabled then
            disableNoclip()
        end
        return false
    end
    
    duration = duration or teleportSpeed
    
    local character = LocalPlayer.Character
    if not character then 
        currentlyTeleporting = false
        if not wasNoclipEnabled then
            disableNoclip()
        end
        return false
    end
    
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not rootPart then
        currentlyTeleporting = false
        if not wasNoclipEnabled then
            disableNoclip()
        end
        return false
    end
    
    pcall(function()
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.P = 9000
        bodyVelocity.Parent = rootPart
        
        local tween = TweenService:Create(
            rootPart, 
            TweenInfo.new(duration, Enum.EasingStyle.Linear),
            {CFrame = CFrame.new(destination)}
        )
        tween:Play()
        
        delay(duration + 0.1, function()
            if bodyVelocity then bodyVelocity:Destroy() end
            currentlyTeleporting = false
            
            if not wasNoclipEnabled and destination ~= safeLocation then
                disableNoclip()
            end
        end)
    end)
    
    return true
end

function findValuableItems()
    local now = tick()
    if now - lastScan < scanInterval and #cachedItems > 0 then
        return cachedItems
    end
    local items = {}
    lastScan = now
    for _, child in ipairs(workspace:GetChildren()) do
        local isTarget = false
        local isYen = false
        for _, pattern in ipairs(targetItems) do
            if child.Name:find(pattern) then
                
                if child.Name:find("Yen") then
                    isYen = true
                    if includeYen then
                        isTarget = true
                    end
                else
                    isTarget = true
                end
                break
            end
        end
        
        if isTarget then
            local position = nil
            
            
            if child:IsA("Tool") and child:FindFirstChild("Handle") then
                position = child.Handle.Position
            elseif child:IsA("BasePart") then
                position = child.Position
            elseif child:IsA("Model") and child:FindFirstChild("HumanoidRootPart") then
                position = child.HumanoidRootPart.Position
            elseif child:FindFirstChildWhichIsA("BasePart") then
                position = child:FindFirstChildWhichIsA("BasePart").Position
            end
            
            if position then
                table.insert(items, {
                    name = child.Name,
                    instance = child,
                    position = position,
                    isYen = isYen
                })
            end
        end
    end
    
    
    cachedItems = items
    return items
end


function getNearestItem()
    local items = findValuableItems()
    local character = LocalPlayer.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return nil end
    
    local rootPos = character.HumanoidRootPart.Position
    local nearestItem = nil
    local nearestDistance = math.huge
    
    for _, item in ipairs(items) do
        local distance = (rootPos - item.position).Magnitude
        if distance < nearestDistance then
            nearestDistance = distance
            nearestItem = item
        end
    end
    
    return nearestItem
end


function farmItems()
    if isFarming then
        
        isFarming = false
        if farmConnection then
            farmConnection:Disconnect()
            farmConnection = nil
        end
        farmButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
        farmButton.Text = "Start Farming"
        statusLabel.Text = "Status: Idle"
        return
    end
    
    
    isFarming = true
    farmButton.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
    farmButton.Text = "Stop Farming"
    
    
    local items = findValuableItems()
    itemCounter.Text = "Items Found: " .. #items
    
    
    local function farmCycle()
        if not isFarming then return end
        
        local nearestItem = getNearestItem()
        if nearestItem then
            statusLabel.Text = "Status: Teleporting to " .. nearestItem.name
            teleportTo(nearestItem.position, teleportSpeed)
            
            
            delay(teleportSpeed + farmDelay, function()
                
                local items = findValuableItems()
                itemCounter.Text = "Items Found: " .. #items
                farmCycle()
            end)
        else
            statusLabel.Text = "Status: No items found, scanning..."
            
            delay(0.5, function()
                
                local items = findValuableItems()
                itemCounter.Text = "Items Found: " .. #items
                farmCycle()
            end)
        end
    end
    
    
    farmCycle()
end


farmButton.MouseButton1Click:Connect(farmItems)


local function notify(text, duration)
    duration = duration or 3
    
    local notification = Instance.new("Frame")
    notification.Name = "Notification"
    notification.Size = UDim2.new(0, 300, 0, 50)
    notification.Position = UDim2.new(0.5, -150, 0, -50)
    notification.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    notification.BorderSizePixel = 0
    notification.Parent = gui
    
    local notifText = Instance.new("TextLabel")
    notifText.Name = "Text"
    notifText.Size = UDim2.new(1, -20, 1, 0)
    notifText.Position = UDim2.new(0, 10, 0, 0)
    notifText.BackgroundTransparency = 1
    notifText.Text = text
    notifText.TextColor3 = Color3.fromRGB(255, 255, 255)
    notifText.TextSize = 14
    notifText.Font = Enum.Font.SourceSans
    notifText.TextWrapped = true
    notifText.TextXAlignment = Enum.TextXAlignment.Left
    notifText.Parent = notification
    
    
    local tweenIn = TweenService:Create(
        notification,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {Position = UDim2.new(0.5, -150, 0, 20)}
    )
    tweenIn:Play()
    
    
    delay(duration, function()
        local tweenOut = TweenService:Create(
            notification,
            TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In),
            {Position = UDim2.new(0.5, -150, 0, -50)}
        )
        tweenOut:Play()
        
        tweenOut.Completed:Connect(function()
            notification:Destroy()
        end)
    end)
end

local safeLocButton = Instance.new("TextButton")
safeLocButton.Name = "SafeLocButton"
safeLocButton.Size = UDim2.new(0.8, 0, 0, 30)
safeLocButton.Position = UDim2.new(0.1, 0, 0.75, 0)
safeLocButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
safeLocButton.BorderSizePixel = 0
safeLocButton.Text = "Teleport to Safe Location"
safeLocButton.TextColor3 = Color3.fromRGB(255, 255, 255)
safeLocButton.TextSize = 14
safeLocButton.Font = Enum.Font.SourceSans
safeLocButton.Parent = mainFrame

local cityButton = Instance.new("TextButton")
cityButton.Name = "CityButton"
cityButton.Size = UDim2.new(0.8, 0, 0, 30)
cityButton.Position = UDim2.new(0.1, 0, 0.82, 0)
cityButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
cityButton.BorderSizePixel = 0
cityButton.Text = "Teleport to City"
cityButton.TextColor3 = Color3.fromRGB(255, 255, 255)
cityButton.TextSize = 14
cityButton.Font = Enum.Font.SourceSans
cityButton.Parent = mainFrame

safeLocButton.MouseButton1Click:Connect(function()
    statusLabel.Text = "Status: Teleporting to Safe Location..."
    enableNoclip()  
    if teleportTo(safeLocation, 1.0) then
        delay(1.1, function()
            if not isFarming then
                statusLabel.Text = "Status: At Safe Location (Noclip Enabled)"
            end
        end)
    else
        statusLabel.Text = "Status: Teleport Failed"
        disableNoclip()  
    end
end)

cityButton.MouseButton1Click:Connect(function()
    statusLabel.Text = "Status: Teleporting to City..."
    if teleportTo(cityLocation, 1.0) then
        delay(1.1, function()
            if not isFarming then
                statusLabel.Text = "Status: At City"
            end
        end)
    else
        statusLabel.Text = "Status: Teleport Failed"
    end
end)


gui.Parent.ChildRemoved:Connect(function(child)
    if child == gui then
        if farmConnection then
            farmConnection:Disconnect()
        end
        if noclipConnection then
            disableNoclip()
        end
        isFarming = false
    end
end) 
